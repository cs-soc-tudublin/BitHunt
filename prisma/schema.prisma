// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id                Int        @id @default(autoincrement())
  name              String
  organisers        String
  active            Boolean    @default(false)
  prizes            String?
  prizeQty          Int?
  description       String?
  enableLeaderboard Boolean    @default(true)
  players           Player[]
  locations         Location[]
}

model Player {
  studentId      String           @id
  name           String
  showOnBoard    Boolean          @default(true)
  completed      Boolean          @default(false)
  Game           Game             @relation(fields: [gameId], references: [id])
  gameId         Int
  nextLocation   Int?
  Location       Location?        @relation(fields: [nextLocation], references: [id])
  PlayerLocation PlayerLocation[]

  Login Login[]
}

model Location {
  id             Int              @id @default(autoincrement())
  name           String
  hint           String
  active         Boolean          @default(true)
  qrCode         String
  Game           Game?            @relation(fields: [gameId], references: [id])
  gameId         Int?
  PlayerLocation PlayerLocation[]
  Player         Player[]
}

model PlayerLocation {
  id             Int      @id @default(autoincrement())
  playerId       String
  locationId     Int
  completionTime DateTime @default(now())
  Player         Player   @relation(fields: [playerId], references: [studentId])
  Location       Location @relation(fields: [locationId], references: [id])
}

model Login {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  admin      Boolean  @default(false)
  player     String?
  expiration DateTime

  Player Player? @relation(fields: [player], references: [studentId])
}
